name: Deploy Maggie Worker

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate configuration
        run: node scripts/ci/validate-config.mjs
        env:
          MAGGIE_CONFIG_JSON: ${{ secrets.MAGGIE_CONFIG_JSON }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TALLY_FORM_ID: ${{ secrets.TALLY_FORM_ID }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          BROWSERLESS_KEY: ${{ secrets.BROWSERLESS_KEY }}
          BROWSERLESS_API_KEY: ${{ secrets.BROWSERLESS_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          CODEX_SYNC_URL: ${{ secrets.CODEX_SYNC_URL }}
          CODEX_AUTH_TOKEN: ${{ secrets.CODEX_AUTH_TOKEN }}
          POST_THREAD_SECRET: ${{ secrets.POST_THREAD_SECRET }}
          SECRET_BLOB: ${{ secrets.SECRET_BLOB }}
          BRAIN_DOC_KEY: ${{ secrets.BRAIN_DOC_KEY }}
          POSTQ_KV_NAMESPACE: ${{ secrets.POSTQ_KV_NAMESPACE }}
          POSTQ_KV_TOKEN: ${{ secrets.POSTQ_KV_TOKEN }}

      - name: Deploy to Cloudflare Workers
        id: publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: node scripts/ci/run-wrangler-deploy.mjs --config wrangler.toml

      - name: Notify Telegram
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_THREAD_ID: ${{ secrets.TELEGRAM_THREAD_ID }}
          DEPLOY_STATUS: ${{ job.status }}
          DEPLOY_STEP_STATUS: ${{ steps.publish.outcome }}
        run: node scripts/ci/notify-telegram.mjs
