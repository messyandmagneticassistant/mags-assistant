name: Deploy Worker
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Wrangler
        run: npm install -g wrangler

      - name: Publish
        if: github.event_name != 'pull_request'
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        run: wrangler deploy -c wrangler.toml

      - name: Smoke test + Telegram after deploy
        if: github.event_name != 'pull_request' && success()
        run: |
          set -euo pipefail
          base_url="https://maggie.messyandmagnetic.com"
          for endpoint in /health /summary /daily; do
            for i in 1 2 3; do
              echo "Requesting ${endpoint} attempt ${i}"
              if curl -sSf "${base_url}${endpoint}"; then
                break
              fi

              if [ "$i" -eq 3 ]; then
                echo "Failed to call ${endpoint} after ${i} attempts"
                exit 1
              fi

              sleep $((i * 5))
            done
          done

      - name: Verify deployment & notify
        if: github.event_name != 'pull_request'
        env:
          WORKER_PING_URL: https://maggie.messyandmagnetic.com/ping
          WORKER_PING_DEBUG_URL: https://maggie.messyandmagnetic.com/ping-debug
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_DEPLOY_CHAT_ID: ${{ secrets.TELEGRAM_DEPLOY_CHAT_ID }}
        run: node scripts/verify-worker-deploy.mjs

      - name: Preview (PRs)
        if: github.event_name == 'pull_request'
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        run: wrangler deploy -c wrangler.toml --dry-run
