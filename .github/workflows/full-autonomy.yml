name: Full Autonomy

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CF_KV_POSTQ_NAMESPACE_ID: ${{ secrets.CF_KV_POSTQ_NAMESPACE_ID }}
      WORKER_URL: ${{ secrets.WORKER_URL }}
      WORKER_BASE_URL: ${{ secrets.WORKER_URL }}
      WORKER_KEY: ${{ secrets.WORKER_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      TALLY_API_KEY: ${{ secrets.TALLY_API_KEY }}
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      NOTION_DONOR_PAGE_ID: ${{ secrets.NOTION_DONOR_PAGE_ID }}
      AUTONOMY_TASK: full-autonomy
      AUTONOMY_CHECKS: stripe=pending,tally=pending,social=pending,fileCleanup=pending,marketing=pending
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@9.12.0 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Hydrate Maggie KV snapshot
        if: ${{ secrets.THREAD_STATE_JSON != '' && secrets.BRAIN_DOC_MD != '' }}
        env:
          THREAD_STATE_JSON: ${{ secrets.THREAD_STATE_JSON }}
          BRAIN_DOC_MD: ${{ secrets.BRAIN_DOC_MD }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_KV_POSTQ_NAMESPACE_ID: ${{ secrets.CF_KV_POSTQ_NAMESPACE_ID }}
        run: pnpm run seed:kv

      - name: Run Maggie orchestrator
        run: pnpm tsx scripts/fullAutonomy.ts

      - name: Notify Telegram completion
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -n "${TELEGRAM_BOT_TOKEN}" ] && [ -n "${TELEGRAM_CHAT_ID}" ]; then
            DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            curl -sS -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              --data-urlencode "chat_id=${TELEGRAM_CHAT_ID}" \
              --data-urlencode "text=Maggie run complete at ${DATE}" \
              > /dev/null
          else
            echo "Skipping Telegram notify â€“ credentials missing"
          fi

      - name: Stamp run metadata
        if: always()
        run: |
          python3 - <<'PY'
          from datetime import datetime, timedelta, timezone
          import os

          path = os.environ['GITHUB_ENV']
          now = datetime.now(timezone.utc)
          with open(path, 'a', encoding='utf-8') as fh:
              fh.write(f"AUTONOMY_TIMESTAMP={now.isoformat().replace('+00:00','Z')}\n")
              fh.write(f"AUTONOMY_NEXT_RUN={(now + timedelta(minutes=15)).isoformat().replace('+00:00','Z')}\n")
          PY

      - name: Publish failure heartbeat
        if: failure()
        run: |
          {
            echo "AUTONOMY_CHECKS=stripe=fail:workflow-error,tally=fail:workflow-error,social=fail:workflow-error,fileCleanup=fail:workflow-error,marketing=fail:workflow-error"
          } >> "$GITHUB_ENV"
          pnpm tsx scripts/fullAutonomy.ts --from-env

