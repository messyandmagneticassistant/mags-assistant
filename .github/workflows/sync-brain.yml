name: Sync Brain to KV

on:
  workflow_dispatch:
  schedule:
    # 02:05 America/Denver ≈ 08:05 UTC (GitHub uses UTC)
    - cron: "5 8 * * *"

permissions:
  contents: write
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # Make all required credentials available
    env:
      # --- GitHub auth: GH_PAT only ---
      GH_PAT: ${{ secrets.GH_PAT }}

      # --- Cloudflare / KV (names already present in repo secrets per screenshots) ---
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_KV_POSTQ_NAMESPACE_ID: ${{ secrets.CF_KV_POSTQ_NAMESPACE_ID }}

      # --- Worker KV keys to read/write ---
      SECRET_BLOB: thread-state
      BRAIN_DOC_KEY: PostQ:thread-state

    steps:
      - name: Checkout (with PAT)
        uses: actions/checkout@v4
        with:
          token: ${{ env.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # Reliable pnpm install (fixes “pnpm not found”)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Show tool versions
        run: |
          node -v
          pnpm --version || true

      # Only install if package.json exists (mono/support both)
      - name: Install deps (if package.json)
        run: |
          if [ -f package.json ]; then
            pnpm install --frozen-lockfile=false
          else
            echo "No package.json at repo root; skipping install."
          fi

      # === Brain → KV upload ===
      - name: Update Brain KV
        run: |
          if [ -f scripts/updateBrain.ts ]; then
            npx tsx scripts/updateBrain.ts
          else
            echo "scripts/updateBrain.ts not found"; exit 1
          fi

      # === Verify parity / reachability ===
      - name: Ping / verify Brain
        run: |
          if [ -f scripts/brainPing.ts ]; then
            npx tsx scripts/brainPing.ts
          else
            echo "scripts/brainPing.ts not found"; exit 1
          fi

      # === Sanity check the live worker ===
      - name: Sanity: /health
        run: |
          set -e
          curl -sS -i https://maggie.messyandmagnetic.com/health | sed -n '1,20p'

      - name: Sanity: /diag/config
        run: |
          set -e
          curl -sS -i https://maggie.messyandmagnetic.com/diag/config | sed -n '1,80p'
