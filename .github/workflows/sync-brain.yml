name: Sync Brain (KV ⇄ repo)

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Why are we running this?"
        required: false
        default: "manual"
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "30 3 * * *"   # 03:30 UTC (~9:30pm ABQ during DST)
  workflow_call:
    inputs:
      reason:
        required: false
        type: string
        default: "manual"

permissions:
  contents: write
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      GH_PAT: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      GH_TOKEN: ${{ secrets.GH_PAT }}

      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_KV_POSTQ_NAMESPACE_ID: ${{ secrets.CF_KV_POSTQ_NAMESPACE_ID }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID || secrets.CF_ACCOUNT_ID || secrets.ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN || secrets.CF_API_TOKEN || secrets.API_TOKEN }}
      ACCOUNT_ID: ${{ secrets.ACCOUNT_ID || secrets.CLOUDFLARE_ACCOUNT_ID || secrets.CF_ACCOUNT_ID }}

      SECRET_BLOB: thread-state
      BRAIN_DOC_KEY: PostQ:thread-state

    steps:
      - name: Diagnostics
        shell: bash
        env:
          GH_TOKEN: ${{ env.GH_PAT }}
        run: |
          echo "Actor: $GITHUB_ACTOR"
          echo "Using PAT for repo: $GITHUB_REPOSITORY"
          gh auth status || true

      - name: Log dispatch reason
        env:
          DISPATCH_REASON: ${{ inputs.reason || github.event.inputs.reason || '' }}
          TRIGGER: ${{ github.event_name }}
        run: |
          if [ -n "$DISPATCH_REASON" ]; then
            echo "Dispatch reason: $DISPATCH_REASON"
          else
            echo "Dispatch reason: (none provided; trigger=$TRIGGER)"
          fi

      - name: Checkout (with PAT)
        uses: actions/checkout@v4
        with:
          token: ${{ env.GH_PAT }}

      - name: Seed KV via Worker
        run: |
          set -uo pipefail

          TMP_BODY="$(mktemp)"
          CODE=0
          STATUS=$(curl --fail-with-body -sS \
            -o "$TMP_BODY" \
            -w "%{http_code}" \
            -X POST "https://maggie.messyandmagnetic.com/init-blob" \
            -H "Authorization: Bearer ${{ secrets.POST_THREAD_SECRET }}" \
            -H "Content-Type: application/json" \
            --data-binary @config/kv-state.json) || CODE=$?

          if [[ "$CODE" == "22" ]]; then
            if [[ "$STATUS" == "409" ]]; then
              echo "Blob already exists, continuing…"
            else
              echo "Seed KV request failed with HTTP $STATUS"
              cat "$TMP_BODY"
              rm -f "$TMP_BODY"
              exit "$CODE"
            fi
          elif [[ "$CODE" != "0" ]]; then
            echo "Seed KV request failed with curl exit code $CODE"
            cat "$TMP_BODY"
            rm -f "$TMP_BODY"
            exit "$CODE"
          else
            cat "$TMP_BODY"
          fi

          rm -f "$TMP_BODY"

      - name: Smoke test KV
        run: |
          curl -s "https://maggie.messyandmagnetic.com/diag/config" \
            -H "Authorization: Bearer ${{ secrets.POST_THREAD_SECRET }}"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Setup Node + pnpm (corepack)
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          node -v && pnpm -v

      - name: Install deps (if package.json)
        run: |
          if [ -f package.json ]; then
            pnpm install --frozen-lockfile=false
          else
            echo "No package.json at repo root; skipping install."
          fi

      - name: Update Brain KV
        run: |
          if [ -f scripts/updateBrain.ts ]; then
            npx tsx scripts/updateBrain.ts
          else
            echo "scripts/updateBrain.ts not found"; exit 1
          fi

      - name: Ping / verify Brain
        run: |
          if [ -f scripts/brainPing.ts ]; then
            npx tsx scripts/brainPing.ts
          else
            echo "scripts/brainPing.ts not found"; exit 1
          fi

      - name: Sanity: /health
        run: |
          curl -sS -i https://maggie.messyandmagnetic.com/health | sed -n '1,20p'

      - name: Sanity: /diag/config
        run: |
          curl -sS -i https://maggie.messyandmagnetic.com/diag/config | sed -n '1,80p'